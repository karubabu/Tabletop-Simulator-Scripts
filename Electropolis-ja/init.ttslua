button_parameters = {}
button_parameters.click_function = 'DealButtonClicked'
button_parameters.function_owner = nil
button_parameters.label = 'Deal'
button_parameters.position = {0,0.8,0}
button_parameters.rotation = {0,-180,0}
button_parameters.width = 2000
button_parameters.height = 1800
button_parameters.font_size = 900
library_GUID = "28106c"
A_expansion_library_GUID = "5747bd"
B_expansion_library_GUID = "e91556"
C_expansion_library_GUID = "92cf13"
expansion_cards_on_field = {"c16a8f", "bec8bf", "80f1ce", "cb09ce"}
bag_table = {}
bag_table.type = "bag"
bag_table.scale = {0.66,0.66,0.66}

function onload()
  A_library = getObjectFromGUID(A_expansion_library_GUID)
  B_library = getObjectFromGUID(B_expansion_library_GUID)
  C_library = getObjectFromGUID(C_expansion_library_GUID)
  players_counter = spawnObject({position={-34.53535,1.460778, 25.8741},type="Counter"})
  players_counter.setValue(2)
  button_yorisiro_checker = spawnObject({position={-28.4458,1.481499,25.16211},type="Checker_red"})
  button_yorisiro_checker.createButton(button_parameters)
  library = getObjectFromGUID(library_GUID)
  BringBackExpansionCards()
  bag_table.position = A_library.getPosition()
  A_expansion_bag = spawnObject(bag_table)
  bag_table.position = B_library.getPosition()
  B_expansion_bag = spawnObject(bag_table)
  bag_table.position = C_library.getPosition()
  C_expansion_bag = spawnObject(bag_table)
  PutExpansionCardsintoBag()
end

function BringBackExpansionCards()
  if A_library == nil then error("A_library can't be found.") end
  for i,v in pairs(expansion_cards_on_field) do
    temp_obj = getObjectFromGUID(v)
    A_library.putObject(temp_obj)
  end
  A_library.shuffle()
end

function PutExpansionCardsintoBag()
  for i = 1, A_library.getQuantity() do
    A_expansion_bag.putObject(A_library.takeObject({}))
  end
  for i = 1, B_library.getQuantity() do
    B_expansion_bag.putObject(B_library.takeObject({}))
  end
  for i = 1, C_library.getQuantity() do
    C_expansion_bag.putObject(C_library.takeObject({}))
  end
end

function DealExpansionCardstoField(player_num)
  if player_num == 0 then return end
  snappoint_table = Global.GetSnapPoints()
  for i,v in pairs(snappoint_table) do
    if i == (player_num + 18) then
      temp_v = v
      temp_v.callback_function = function(obj) flip_expansion_card(obj) end
      PutExpansionCard(temp_v)
    end
  end
  DealExpansionCardstoField(player_num - 1)
end

function flip_expansion_card(obj)
  obj.flip()
end

function PutExpansionCard(table)
  if A_expansion_bag.getQuantity() ~= 0 then A_expansion_bag.takeObject(table) return end
  if B_expansion_bag.getQuantity() ~= 0 then B_expansion_bag.takeObject(table) return end
  if C_expansion_bag.getQuantity() ~= 0 then C_expansion_bag.takeObject(table) return end
end

function DealButtonClicked()
  if players_counter == nil then error("counter can't be found.") end
  player_count = players_counter.getValue()
  if player_count < 2 then error("player is too few.") end
  if player_count > 4 then error("player is too many.") end

  DealBuildTilestoField(player_count)
  DealExpansionCardstoField(player_count)
end

function DealBuildTilestoField(player_num)
  local switch = {2,3,4}
  switch[2] = function()
    DealBuildTiletoField(14)
  end
  switch[3] = function()
    DealBuildTiletoField(16)
  end
  switch[4] = function()
    DealBuildTiletoField(18)
  end
  switch[player_num]()
end

function DealBuildTiletoField(number_of_remaining_cards)
  if number_of_remaining_cards == 0 then return end
  if library == nil then error("library can't be found.") end
  snappoint_table = Global.GetSnapPoints()
  library.takeObject(snappoint_table[number_of_remaining_cards])
  DealBuildTiletoField(number_of_remaining_cards - 1)
end
